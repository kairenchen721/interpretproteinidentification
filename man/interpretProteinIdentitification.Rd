% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpretproteinidentification-package.R
\docType{package}
\name{interpretProteinIdentitification}
\alias{interpretProteinIdentitification}
\title{interpretProteinIdentitification: A package for visualizing protein inference results}
\description{
The interpretProteinIdentitification package provides three functions:
generateBipartiteGraph, displayComponent, selectProtein
}
\section{generateBipartiteGraph function}{

The generateBipartiteGraph function take in idXML files and make a graph
}

\section{displayComponent function}{

The displayComponent function take in graph object generated by
generateBipartiteGraph and plot one of it components
}

\section{selectProtein function}{

The selectProtein function take in any graph object
(either the whole graph from generateBipartiteGraph or a component
from displayComponent) and display only the portion of the
graph/component that is connect to the inputted protein
}

\section{Reason of separating generateBipartiteGraph and displayComponent}{

The reason why generateBipartiteGraph and displayComponent is separate
because there may be more than 1 component that the user want to look at,
if the package were to make displayComponent as a helper function to
generateBipartiteGraph, and have the user input a integer as a argument
to generateBipartiteGraph, this may cause 3 problems. The first one is
that if displayComponent functionality is only in generateBipartiteGraph
is that every time the user needs to display another component, the package
re-generate the whole graph again, which can be very resource intensive.
The second one is that if displayComponent functionality also exist as
a separate user-facing function, is that the user may get confused and
re-generate the whole again regardless. The third one is that in either case,
we have an additional parameter, while it may not be an really bad thing,
it is may be better to avoid having more parameters.
}

